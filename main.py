import os

import sqlite3

import telebot
from telebot import types
import webbrowser

bot = telebot.TeleBot('6711585462:AAHGNVfsih00YbwOCoenpv8PMWgdJpMc2Zg')

#—è–∫ —Ç—ñ–ª—å–∫b –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –∫–æ–º–∞–Ω–¥—É start –≤—ñ–Ω –º–æ–∂–µ–Ω –æ—é—Ä–∞—Ç–∏ –º—ñ–∂ "üî•–ù–∞–≤—á–∞–Ω–Ω—è" i "üòé–ö–æ—Ä–∏—Å–Ω–µ"
#—Ç—É—Ç –æ–ø–∏—Å—É—î—Ç—å—Å—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –¥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –≤–∏–±—ñ—Ä —è–∫–∏–π –≤—ñ–Ω –º–æ–∂–µ –∑—Ä–æ–±–∏—Ç–∏
@bot.message_handler(commands=['start'])
def start(message):
    # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    conn = sqlite3.connect('metsource.db')
    cur = conn.cursor()

    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é, —è–∫—â–æ —ó—ó –Ω–µ —ñ—Å–Ω—É—î
    cur.execute('CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(50), password VARCHAR(50))')
    conn.commit()

    # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
    cur.close()
    conn.close()

    # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é, —â–æ –∑–∞–ø–∏—Ç—É—î —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    ask_for_name(message)


def ask_for_name(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç! –Ø–∫ —Ç–µ–±–µ –∑–≤–∞—Ç–∏?")
    bot.register_next_step_handler(message, save_name)


def save_name(message):
    name = message.text
    save_user_to_db(message.chat.id, name)
    send_welcome_message(message)


def save_user_to_db(user_id, name):
    # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    conn = sqlite3.connect('metsource.db')
    cur = conn.cursor()

    # –í—Å—Ç–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Ç–∞–±–ª–∏—Ü—é
    cur.execute("INSERT INTO users (name) VALUES (?)", (name,))
    conn.commit()

    # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
    cur.close()
    conn.close()


def send_welcome_message(message):
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –¥–≤–æ–º–∞ –∫–Ω–æ–ø–∫–∞–º–∏
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('üî•–ù–∞–≤—á–∞–Ω–Ω—è', callback_data='navchannya'))
    markup.add(types.InlineKeyboardButton('üòé–ö–æ—Ä–∏—Å–Ω–µ', callback_data='korisne'))

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    welcome_message = '''*–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ!*

    "–ù–∞–≤—á–∞–Ω–Ω—è" –º—ñ—Å—Ç–∏—Ç—å —Ä–æ–∑–¥—ñ–ª–∏ "–ö—É—Ä—Å–∏" —Ç–∞ "–ö–Ω–∏–≥–∏", —è–∫—ñ –ø–æ—Å—Ç—ñ–π–Ω–æ –ø–æ–ø–æ–≤–Ω—é—é—Ç—å—Å—è –∞–∫—Ç—É–∞–ª—å–Ω–∏–º–∏ –º–∞—Ç–µ—Ä—ñ–∞–ª–∞–º–∏ –¥–ª—è –Ω–∞–≤—á–∞–Ω–Ω—è —Ç–∞ –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó.

    "–ö–æ—Ä–∏—Å–Ω–µ" - –∑–±—ñ—Ä–∫–∞ —Ç–æ–ø–æ–≤–∏—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤, —è–∫–∏–º–∏ —Å–ª—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è.

    –£–¥–∞—á—ñ, —Ç–≤–æ—è –∫–æ–º–∞–Ω–¥–∞ *metSource!*'''
    welcome_message_highlighted = welcome_message.replace('–ù–∞–≤—á–∞–Ω–Ω—è', '*–ù–∞–≤—á–∞–Ω–Ω—è*').replace('–ö—É—Ä—Å–∏', '*–ö—É—Ä—Å–∏*').replace(
        '–ö–Ω–∏–≥–∏', '*–ö–Ω–∏–≥–∏*').replace('–ö–æ—Ä–∏—Å–Ω–µ', '*–ö–æ—Ä–∏—Å–Ω–µ*')
    bot.send_message(message.chat.id, welcome_message_highlighted, parse_mode='Markdown', reply_markup=markup)

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "üî•–ù–∞–≤—á–∞–Ω–Ω—è"
# –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ–±–∏—Ä–∞—î –º—ñ–∂ –∫–Ω–æ–ø–∫–∞–º–∏, —Ç–∞–∫–æ–∂ —Ç—É—Ç –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –¥–≤–æ—Ö –∫–Ω–æ–ø–æ–∫ "üíå–ö—É—Ä—Å–∏" —Ç–∞ "üìö–ö–Ω–∏–≥–∏", —ñ –ø—Ä–∏ –±–∞–∂–∞–Ω–Ω—ñ –≤—ñ–Ω –º–æ–∂–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥
@bot.callback_query_handler(func=lambda call: call.data == 'navchannya')
def navchannya_handler(call):
    markup = types.InlineKeyboardMarkup()
    markup.row(types.InlineKeyboardButton('‚ö°üå©–ù–æ–≤–∞—á–∫–∞–º', callback_data='novachkam'))
    markup.row(types.InlineKeyboardButton('‚úÖ–ó–∞–≤–¥–∞–Ω–Ω—è', callback_data='task'))
    markup.row(types.InlineKeyboardButton('üíå–ö—É—Ä—Å–∏', callback_data='kyrs'), types.InlineKeyboardButton('üìö–ö–Ω–∏–≥–∏', callback_data='books'))
    markup.add(types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='back_to_main'))
    bot.send_message(call.message.chat.id, "–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –Ω–∞–≤—á–∞–Ω–Ω—è:", reply_markup=markup)


#–æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤—á–∞–Ω–Ω—è(task)
@bot.callback_query_handler(func=lambda call: call.data == 'task')
def task_callback(call):
    markup = types.InlineKeyboardMarkup()
    markup.row(types.InlineKeyboardButton('–∑–∞–≤–¥–∞–Ω–Ω—è –∑ OOP', callback_data='task1'))
    bot.send_message(call.message.chat.id, "–∑–∞–≤–¥–∞–Ω–Ω—è –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –Ω–µ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –æ–¥–Ω–æ—ó –º–æ–≤–∏: ", reply_markup=markup)

#–æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–¥–∞–Ω–Ω—è(task)
import os

@bot.callback_query_handler(func=lambda call: call.data == 'task1')
def task_callback(call):
    if call.data == 'task1':
        directory = './media/practiceOOP/'
        for filename in os.listdir(directory):
            file_path = os.path.join(directory, filename)
            if os.path.isfile(file_path):
                with open(file_path, 'rb') as file:
                    bot.send_document(call.message.chat.id, file)



    if os.path.exists(file_path):
        with open(file_path, 'rb') as file:
            bot.send_document(call.message.chat.id, file)
    else:
        bot.send_message(call.message.chat.id, "–§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")



#–æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–æ–≤–∞—á–∫–∞–º
@bot.callback_query_handler(func=lambda call: call.data == 'novachkam')
def novchkam_callback(call):
    markup = types.InlineKeyboardMarkup()
    markup.row(types.InlineKeyboardButton('—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –∞–≤—Ç–æ—Ä–∞', callback_data='fromAuthor'))
    markup.row(types.InlineKeyboardButton('java', callback_data='javastart'), types.InlineKeyboardButton('python', callback_data='pythonstart'))
    bot.send_message(call.message.chat.id, "—è–∫—â–æ —Ç–∏ —Ç—ñ–ª—å–∫–∏ –ø–æ—á–∏–Ω–∞—î—à —Ç–æ–¥—ñ –º–æ–∂–µ—à –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –∞–≤—Ç–æ—Ä–∞: ", reply_markup=markup)

#–æ–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –Ω–æ–≤–∞—á–∫—ñ–≤(–≤—ñ–¥ –∞–≤—Ç–æ—Ä–∞ —Ç–∞ –ø–æ—á–∞—Ç–æ–∫ —Ä–æ–±–æ—Ç–∏)
@bot.callback_query_handler(func=lambda call: call.data in ['fromAuthor', 'javastart', 'pythonstart'])
def startTOnewbie_callback(call):
    if call.data == 'fromAuthor':
        answer = ''
    elif call.data == 'javastart':
        answer = ''

    bot.send_message(call.message.chat.id, answer)

#–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "üòé–ö–æ—Ä–∏—Å–Ω–µ"
@bot.callback_query_handler(func=lambda call: call.data == 'korisne')
def korisne_handler(call):
    markup = types.InlineKeyboardMarkup()
    markup.row(types.InlineKeyboardButton('java', callback_data='java100'), types.InlineKeyboardButton('python', callback_data='python100'))
    markup.row(types.InlineKeyboardButton('javascript', callback_data='javascript100'), types.InlineKeyboardButton('C#/.NET', callback_data='C#100'))
    bot.send_message(call.message.chat.id, "—Ü–µ–π —Ä–æ–∑–¥—ñ–ª –±—ñ–ª—å—à–µ –∑—Ä–æ–±–ª–µ–Ω–∏–π –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü—ñ—ó, —Ç–æ–º—É —Ç—É—Ç —è –∑–∞–ª–∏—à—É —è–∫—ñ –ø–∏—Ç–∞–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–∞—Ç–∏ –Ω–∞ —Ä—ñ–≤–µ–Ω—å junior developer –∑ —Ç–∞–∫–∏—Ö –º–æ–≤: ", reply_markup=markup)

#–æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ java100 and python100
@bot.callback_query_handler(func=lambda call: call.data in ['java100', 'python100', 'javascript100', 'C#100'])
def question100_handler(call):
    if call.data == 'java100':
        question_url = 'https://dou.ua/lenta/articles/interview-questions-java-developer/?from=tiles'
    elif call.data == 'python100':
        question_url = 'https://dou.ua/lenta/articles/interview-questions-python-developer/'
    elif call.data == 'javascript100':
        question_url = 'https://dou.ua/lenta/articles/interview-questions-javascript-developer/'
    elif call.data == 'C#100':
        question_url = 'https://dou.ua/lenta/articles/interview-questions-net-developer/'

    bot.send_message(call.message.chat.id, question_url)


# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "üíå–ö—É—Ä—Å–∏" —Ç–∞ –∑ —è–∫–æ—é –º–æ–≤–æ—é –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ –±—É–¥—É—Ç—å –ø–æ–≤—è–∑–∞–Ω—ñ
@bot.callback_query_handler(func=lambda call: call.data == 'kyrs')
def kyrs_handler(call):
    markup = types.InlineKeyboardMarkup()
    markup.row(types.InlineKeyboardButton('HTML', callback_data='html_kyrs'))
    markup.row(types.InlineKeyboardButton('Java', callback_data='java_kyrs'), types.InlineKeyboardButton('python', callback_data='python_kyrs'))
    markup.row(types.InlineKeyboardButton('javascript', callback_data='javascript_kyrs'))
    bot.send_message(call.message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è:", reply_markup=markup)

#–æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ –∫—É—Ä—Å–∏ –ø–æ –ø–∞–π—Ç–æ–Ω
@bot.callback_query_handler(func=lambda call: call.data == 'python_kyrs')
def python_kyrs_handler(call):
    markup = types.InlineKeyboardMarkup()
    markup.row(types.InlineKeyboardButton('', callback_data='python_kyrs'))
    bot.send_message(call.message.chat.id, "–≤—Å—ñ –∫—É—Ä—Å–∏ —è–∫—ñ —î –ø–æ python –Ω–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç", reply_markup=markup)

#–æ–±—Ä–æ–±–∫–∞ –¥–ª—è callback=python_kyrs
@bot.callback_query_handler(func=lambda call: call.data == 'python_kyrs')
def python_kyrs_handler(call):
    markup = types.InlineKeyboardMarkup()
    markup.row(types.InlineKeyboardButton(''))



#–æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ –∫—É—Ä—Å—ñ–≤ –ø–æ HTML
@bot.callback_query_handler(func=lambda call: call.data == 'html_kyrs')
def html_kyrs_handler(call):
    markup = types.InlineKeyboardMarkup()
    markup.row(types.InlineKeyboardButton('–≤–µ–ª–∏–∫–∏–π –ü–õ–ê–¢–ù–ò–ô –∫—É—Ä—Å –ø–æ HTML –∑ –¥–æ–º–∞—à–Ω—ñ–º –∑–∞–≤–¥–∞–Ω–Ω—è–º', callback_data='html_bigList'))
    bot.send_message(call.message.chat.id, "–ö—É—Ä—Å–∏ –ø–æ html:", reply_markup=markup)

#–∫–Ω–æ–ø–∫–∏ –¥–æ –∫—É—Ä—Å—É –ø–æ Html
@bot.callback_query_handler(func=lambda call: call.data == 'html_bigList')
def send_html_kyrs(call):
    markup = types.InlineKeyboardMarkup()
    markup.row(types.InlineKeyboardButton('–õ–µ–∫—Ü—ñ—è 1', callback_data='html_bigList_lecture_1'))
    markup.row(types.InlineKeyboardButton('–õ–µ–∫—Ü—ñ—è 2 –∑ –¥–∑', callback_data='html_bigList_lecture_HW_2'))
    markup.row(types.InlineKeyboardButton('–ª–µ–∫—Ü—ñ—è 3-4 ', callback_data='html_bigList_lecture_3-4'))
    markup.row(types.InlineKeyboardButton('–õ–µ–∫—Ü—ñ—è 5', callback_data='html_bigList_lecture_5'))
    markup.row(types.InlineKeyboardButton('–õ–µ–∫—Ü—ñ—è 6', callback_data='html_bigList_lecture_6'))
    markup.row(types.InlineKeyboardButton('–õ–µ–∫—Ü—ñ—è 7', callback_data='html_bigList_lecture_7'))
    markup.row(types.InlineKeyboardButton('–¥–∑ 8-9', callback_data='html_bigList_8-9_HW'))
    markup.row(types.InlineKeyboardButton('–î–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–∞–≤–¥–∞–Ω–Ω—è', callback_data='html_bigList_tasks'))
    bot.send_message(call.message.chat.id, "–∫—É—Ä—Å –ø–æ HTML: :", reply_markup=markup)

# –æ—é—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ –∫—É—Ä—Å—É –ø–æ html(–ª–µ–∫—Ü—ñ—ó, –¥–∑ —Ç–æ—â–æ...)
@bot.callback_query_handler(func=lambda call: call.data in ['html_bigList_lecture_1', 'html_bigList_lecture_HW_2', 'html_bigList_lecture_3-4', 'html_bigList_lecture_5',
                                                            'html_bigList_lecture_6', 'html_bigList_lecture_7', 'html_bigList_8-9_HW', 'html_bigList_tasks'])
def send_html(call):
    if call.data == 'html_bigList_lecture_1':
        lecture = '–õ–µ–∫—Ü—ñ—è 1 : https://vimeo.com/760431927/72f1dd18da –î–ó –≤ –æ–ø–∏—Å—ñ'
    elif call.data == 'html_bigList_lecture_HW_2':
        lecture = 'https://vimeo.com/761572005/4b0dc5a1d7 - –õ–µ–∫—Ü—ñ—è 2 —Ç–∞ –î–ó'
    elif call.data == 'html_bigList_lecture_3-4':
        lecture = '–õ–µ–∫—Ü—ñ—è 3-4 : https://vimeo.com/765248884/0a0c6565b4'
    elif call.data == 'html_bigList_lecture_5':
        lecture = '–õ–µ–∫—Ü—ñ—è 5 : https://vimeo.com/766216973/b04caf8daf'
    elif call.data == 'html_bigList_lecture_6':
        lecture = '–õ–µ–∫—Ü—ñ—è 6 : https://drive.google.com/drive/folders/16zF1ZiY1dAvcdKwCHjW0DRuWGuweAC6C?usp=share_link'
    elif call.data == 'html_bigList_lecture_7':
        lecture = '''–õ–µ–∫—Ü—ñ—è 7 : https://vimeo.com/777673618/e9f5eb8c0f
–î–ó 
https://www.figma.com/file/djwqJH8abh8k9eM3n0P7Fi/ITEA-7-8?node-id=0%3A1
–ü—Ä–æ—î–∫—Ç –º–∞—î —Å–∫–ª–∞–¥–∞—Ç–∏—Å—å –∑ 4-—Ö –µ–∫—Ä–∞–Ω—ñ–≤.
–•–µ–¥–µ—Ä –º–∞—î –±—É—Ç–∏ –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –¥–æ –≤–µ—Ä—Ö—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —è–∫ —Ü–µ –≤–∫–∞–∑–∞–Ω–æ –Ω–∞ –º–∞–∫–µ—Ç—ñ  —Ç–∞ —Å–ø—É—Å–∫–∞—Ç–∏—Å—å –≤ —Å–ª—ñ–¥ –∑–∞ —Å–∫—Ä–æ–ª–ª–æ–º  –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. 
–°—Ç–æ—Ä—ñ–Ω–∫–∞ Gallery 
–î–æ —Ü–µ–Ω—Ç—Ä—É –∑ –ª—ñ–≤–æ—ó —Ç–∞ –ø—Ä–∞–≤–æ—ó —Å—Ç–æ—Ä–æ–Ω–∏ –≤–∏—ó–∂–¥–∂–∞—é—Ç—å –ø–æ 2 –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∑–∞ –ø–µ—Ä—à—É —Å–µ–∫—É–Ω–¥—É —Ç–∞ –±–æ–∫–æ–≤—ñ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∑ –ª—ñ–≤–∞ —Ç–∞ –ø—Ä–∞–≤–∞ –¥–æ–¥–∞—é—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥—ñ–π —Å–µ–∫—É–Ω–¥—ñ. –ó–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –∞–Ω—ñ–º–∞—Ü—ñ—è —Ç–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è —Ç—Ä–∞–Ω—Å–ª–µ–π—Ç  
—Å—Ç–æ—Ä—ñ–Ω–∫–∞ Services
–ö–∞—Ä—Ç–∏–Ω–∫–∏ –∑ –∫—Ä—É–∂–µ—á–∫–∞–º–∏ –º–∞—é—Ç—å –∫—Ä—É—Ç–∏—Ç–∏—Å—å –æ–¥–Ω–∞ –∑–∞ –æ–¥–Ω–æ—é –ø–æ —á–∞—Å–æ–≤—ñ–π —Å—Ç—Ä—ñ–ª—Ü—ñ –º—ñ–Ω—è—é—á–∏—Å—å –º—ñ—Å—Ü—è–º–∏ (–ø–æ—Å—Ç—ñ–π–Ω–æ –∞–Ω—ñ–º—É—é—Ç—å—Å—è, –∞–ª–µ –Ω–µ —à–≤–∏–¥–∫–æ, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ –æ–¥–Ω–∞ –∞–Ω—ñ–º–∞—Ü—ñ—è —Ç—Ä–∏–≤–∞—î 5—Å–µ–∫—É–Ω–¥)
—Å—Ç–æ—Ä—ñ–Ω–∫–∞ Team
–ü—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏—Ö –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –º–∞—î –ø—ñ–¥—Å–≤—ñ—á—É–≤–∞—Ç–∏—Å—å —ñ–º'—è –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ —è–∫ –Ω–∞ –º–∞–∫–µ—Ç—ñ. (–¥–∏–≤. –º–∞–∫–µ—Ç)
–°—Ç–æ—Ä—ñ–Ω–∫–∞ Contact Us
–°—Ç–æ—Ä—ñ–Ω–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤. –í—Ä–∞—Ö–æ–≤—É–π—Ç–µ –≤—Å—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤–æ–Ω–∏ –º–∞—é—Ç—å –±—É—Ç–∏ —Ä–æ–±–æ—á–∏–º–∏ —Ç–∞ –≤–±—É–¥—É–π—Ç–µ –∫–∞—Ä—Ç—É –∑ google map


timing function https://cubic-bezier.com/#.17,.67,.83,.67
–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞–º–∏
 https://caniuse.com/
 https://html5test.com/'''
    elif call.data == 'html_bigList_8-9_HW':
        lecture = '''–î–ó 8-9.5 

–ó–∞–ø–∏—Å : https://vimeo.com/780883546/e965242d18

–ú–∞–∫–µ—Ç 
https://www.figma.com/file/Y0E9LZXMqHmN9gmqN8qcfH/hw-lesson-7-8-(Copy)?node-id=0%3A1&t=lqDIFZZ3OXG4JuiZ-0
–ê–¥–∞–ø—Ç–∏–≤–Ω—ñ—Å—Ç—å. 

–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Å–µ–º–∞–Ω—Ç–∏—á–Ω—É, –∞–¥–∞–ø—Ç–∏–≤–Ω—É, —Ä–µ—Å–ø–æ–Ω—Å–∏–≤–Ω—É (–≥—É–º–æ–≤—É) –≤–µ—Ä—Å—Ç–∫—É, –≤–∞–ª—ñ–¥–Ω—É 
–†–æ–∑—à–∏—Ä–µ–Ω–Ω—è < 768px
Gallery
–ö–æ–∂–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ –Ω–æ–≤–æ—ó —Å—Ç—Ä–æ–∫–∏ –∑'—è–≤–ª—è—é—Ç—å—Å—è –æ–¥–Ω–∞ –∑ –ª—ñ–≤–æ—ó  –¥—Ä—É–≥–∞ –∑ –ø—Ä–∞–≤–æ—ó —Å—Ç–æ—Ä–æ–Ω–∏ —ñ —Ç.–¥ 
Services
–ó–∞–ª–∏—à–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –∫—Ä—É–∂–∫—ñ–≤ –∑ —Ç–µ—Å—Ç–æ–º —Ç–∞ –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–µ—Ä—É–∫–∞—Ä—è 
Team
–ö–æ–∂–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ –Ω–æ–≤–æ—ó —Å—Ç—Ä–æ–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫—É –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–ª–∞–≤–Ω–æ –∑'—è–≤–ª—è—î—Ç—å—Å—è —ñ–º'—è —á–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∏ 
Contact Us
–ü–µ—Ä—à–æ—é –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è –∫–∞—Ä—Ç–∞ –ø–æ—Ç—ñ–º —Ñ–æ—Ä–º–∞ 

–†–æ–∑—à–∏—Ä–µ–Ω–Ω—è < 992px
Gallery
–†–æ–±–∏–º–æ 3 —Ä—è–¥–∫–∏ –ø–æ 2 –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ª—ñ–≤—ñ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–∏—ó–∂–¥–∂–∞—é—Ç—å –∑ –ª—ñ–≤–æ—ó —Å—Ç–æ—Ä–æ–Ω–∏, –∞ –ø—Ä–∞–≤—ñ –∑ –ø—Ä–∞–≤–æ—ó.
Services
–∫–∞—Ä—Ç–∏–Ω–∫—É –ø–µ—Ä—É–∫–∞—Ä—è —Ä–æ–±–∏–º–æ –ø–µ—Ä—à–æ—é —Ç–∞ –∑ –Ω–æ–≤–æ—ó —Å—Ç—Ä–æ–∫–∏
–ó–∞–ª–∏—à–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –∫—Ä—É–∂–∫—ñ–≤ –∑ —Ç–µ—Å—Ç–æ–º
Team
2 —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∏ –Ω–∞ –æ–¥–Ω—ñ–π —Å—Ç—Ä–æ—Ü—ñ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω—ñ –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–ª–∞–≤–Ω–æ –∑'—è–≤–ª—è—î—Ç—å—Å—è —ñ–º'—è —á–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∏ 
Contact Us
–ü–µ—Ä—à–æ—é –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è –§–æ—Ä–º–∞ –ø–æ—Ç—ñ–º –º–∞–ø–∞ 

–†–æ–∑—à–∏—Ä–µ–Ω–Ω—è > 992px
–í—Å–µ —è–∫ –Ω–∞ –º–∞–∫–µ—Ç—ñ, –∞–ª–µ —è–∫—â–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –±—É–¥–µ –±—ñ–ª—å—à–∏–º –Ω—ñ–∂ 1620px, —Ç–æ –º–∞—é—Ç—å –±—É—Ç–∏ –±–æ–∫–æ–≤—ñ –≤—ñ–¥—Å—Ç—É–ø–∏.'''
    elif call.data == 'html_bigList_tasks':
        lecture = '''–û—Å—å —Ç—É—Ç –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–∞–¥–∞—á–∫–∏ –∑—ñ–±—Ä–∞–≤ –æ–¥–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º
        –î–æ–¥–∞—Ç–∫–æ–≤–µ –î–ó –í–µ—Ä—Å—Ç–∫–∞¬†

        https://www.figma.com/file/r73iFSdplSF9TsCYTyjSXy/prog-dop?node-id=0%3A1&t=83ynyGRC6N9V2kek

        –û—Å—å –º–∞–∫–µ—Ç. –¢—É—Ç –¥–µ—Å–∫—Ç–æ–ø —Ç–∞ –º–æ–±—ñ–ª—å–Ω–∞ –≤–µ—Ä—Å—Ç–∫–∞¬†
        - –ú–æ–±—ñ–ª—å–Ω–∞ –¥–æ 768 –ø—ñ–∫—Å–µ–ª—ñ–≤¬†
        - –î–µ—Å–∫—Ç–æ–ø –¥–æ 1600 –ø—ñ–∫—Å–µ–ª—ñ–≤

        –î–æ–¥–∞—Ç–∫–æ–≤–æ –¢–∞–±–ª–∏—Ü—ñ¬†

        –ü–æ —Ç–∞–±–ª–∏—á–∫–∞–º —è–∫—â–æ —Ü—ñ–∫–∞–≤–æ –º–æ–∂–µ—Ç–µ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∞–∫–∏–π —Å–∞–π—Ç : https://www.figma.com/file/Z1JE3jWbktx3pFJmqIRWEg/HW-2-video-%F0%9F%94%BA?t=83ynyGRC6N9V2kek-0


        ‚ö†Ô∏è
        - –£–º–æ–≤–∞, –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω—ñ –Ω–∞ –µ–ª–µ–º–µ–Ω—Ç –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ, –∞–Ω—ñ–º—É–π—Ç–µ –µ–ª–µ–º–µ–Ω—Ç. –ó–±—ñ–ª—å—à–∏—Ç–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥.
        - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–µ—Ç–æ–¥–æ–ª–æ–≥—ñ—é –ë–ï–ú - https://ru.bem.info/methodology/key-concepts/'''

    bot.send_message(call.message.chat.id, lecture)

#–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "üìö–ö–Ω–∏–≥–∏" —Ç–∞ –∑ —è–∫–æ—é –º–æ–≤–æ—é –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ –±—É–¥—É—Ç—å –ø–æ–≤—è–∑–∞–Ω—ñ
@bot.callback_query_handler(func=lambda call: call.data == 'books')
def books_handler(call):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('Java', callback_data='java_books'))
    markup.add(types.InlineKeyboardButton('Python', callback_data='python_books'))
    markup.add(types.InlineKeyboardButton('JavaScript', callback_data='javascript_books'))
    bot.send_message(call.message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è:", reply_markup=markup)


# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "Java" –∫–Ω–∏–∂–∫–∏ –ø–æ –¥–∂–∞–≤–∞
@bot.callback_query_handler(func=lambda call: call.data == 'java_books')
def java_books_handler(call):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('Head First Java', callback_data='head_first_java'))
    markup.add(types.InlineKeyboardButton('Filosofia_java', callback_data='filosofia_java'))
    markup.add(types.InlineKeyboardButton('Joshua Bloch - Effective Java (3rd) - 2018', callback_data='effective_java'))
    markup.add(types.InlineKeyboardButton('izuchaem_java_mirovoy(–Ω–∞ —Ä–æ—Å—ñ–π—Å—å–∫—ñ–π)', callback_data = 'izuchaem_java_mirovoy'))
    bot.send_message(call.message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –∫–Ω–∏–≥—É:", reply_markup=markup)


# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–∏–∂–æ–∫ –ø–æ java —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –≤–∏–±–æ—Ä—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@bot.callback_query_handler(func=lambda call: call.data in ['head_first_java', 'filosofia_java', 'effective_java', 'izuchaem_java_mirovoy'])
def send_java_book(call):
    if call.data == 'head_first_java':
        file_path = './media/Head_First_Java_Second_Edition.pdf'
    elif call.data == 'filosofia_java':
        file_path = './media/Filosofia_Java.pdf'
    elif call.data == 'effective_java':
        file_path = './media/Joshua Bloch - Effective Java (3rd) - 2018.pdf'
    elif call.data == 'izuchaem_java_mirovoy':
        file_path = './media/k_syerra_b_beyts_-_izuchaem_java_mirovoy_kom.pdf'

    if os.path.exists(file_path):
        with open(file_path, 'rb') as file:
            bot.send_document(call.message.chat.id, file)
    else:
        bot.send_message(call.message.chat.id, "–§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")

# —Ç—ñ –∫–Ω–æ–ø–∫–∏ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ —è–∫–∏—Ö —â–µ –Ω–µ–º–∞—î
@bot.callback_query_handler(func=lambda call: call.data in ['novachkam', 'kyrs', 'recent_books', 'python_books', 'korisne'])
def additional_navchannya_handler(call):
    bot.send_message(call.message.chat.id, f"–í–∏ –æ–±—Ä–∞–ª–∏ {call.data}")

# –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤—ñ–≤ –Ω–µ–∑—Ä–æ–∑—É–º—ñ–ª—É –∫–æ–º–∞–Ω–¥—É
@bot.message_handler(func=lambda message: True)
def echo_all(message):
    bot.reply_to(message, "–Ø –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /start –¥–ª—è –ø–æ—á–∞—Ç–∫—É.")

bot.polling(none_stop=True)